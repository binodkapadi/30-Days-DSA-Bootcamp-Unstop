SOLUTION ===>

#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

vector<int> user_logic(int n1, vector<int>& flowers, int n2, vector<int>& herbs) {
    unordered_map<int, int> countLily, countRose;
    
    // Count frequencies in Lily's garden
    for (int flower : flowers) {
        countLily[flower]++;
    }
    
    // Count frequencies in Rose's garden
    for (int herb : herbs) {
        countRose[herb]++;
    }
    
    vector<int> result;
    
    // Check each flower in original order
    for (int flower : flowers) {
        if (countLily[flower] > countRose[flower]) {
            result.push_back(flower);
        }
    }
    
    // If no flowers found, return -1
    if (result.empty()) {
        return {-1};
    }
    
    return result;    
}

int main() {
    int n1, n2;
    cin >> n1;
    vector<int> flowers(n1);
    for (int i = 0; i < n1; ++i) {
        cin >> flowers[i];
    }
    cin >> n2;
    vector<int> herbs(n2);
    for (int i = 0; i < n2; ++i) {
        cin >> herbs[i];
    }

    vector<int> result = user_logic(n1, flowers, n2, herbs);

    if (result.size() == 1 && result[0] == -1) {
        cout << -1 << endl;
    } else {
        for (int i = 0; i < result.size(); ++i) {
            cout << result[i] << " ";
        }
        cout << endl;
    }
    return 0;
}
